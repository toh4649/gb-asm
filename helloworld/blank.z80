
;割り込みハンドラ(何もしない) 

SECTION	"V-Blank IRQ Vector",ROM0[$40]
    reti    ;なにもせずリターン(retiは、割り込みを再有効化してくれるret)
	
SECTION	"LCD IRQ Vector",ROM0[$48]
    reti

SECTION	"Timer IRQ Vector",ROM0[$50]
    reti

SECTION	"Serial IRQ Vector",ROM0[$58]
    reti

SECTION	"Joypad IRQ Vector",ROM0[$60]
    reti


; リセット時、ここ(ROMの0x100番地)から実行が始まる 
SECTION	"Start",ROM0[$100]  
	nop         ;(多分)サイズ合わせようのダミー命令
	jp	main

    ;ROMに関する情報。とりあえず気にしなくてよい
    DB $CE,$ED,$66,$66,$CC,$0D,$00,$0B,$03,$73,$00,$83,$00,$0C,$00,$0D
    DB $00,$08,$11,$1F,$88,$89,$00,$0E,$DC,$CC,$6E,$E6,$DD,$DD,$D9,$99
    DB $BB,$BB,$67,$63,$6E,$0E,$EC,$CC,$DD,$DC,$99,$9F,$BB,$B9,$33,$3E
    DB "BLANK          ",0       ; Cart name - 15bytes
    DB 0                         ; $143
    DB 0,0                       ; $144 - Licensee code (not important)
    DB 0                         ; $146 - SGB Support indicator
    DB 0                         ; $147 - Cart type
    DB 0                         ; $148 - ROM Size
    DB 0                         ; $149 - RAM Size
    DB 0                         ; $14a - Destination code (0:日本, 1:海外)
    DB $33                       ; $14b - Old licensee code
    DB 0                         ; $14c - Mask ROM version
    DB 0                         ; $14d - Complement check (rgbfixが自動的に算出してくれる)
    DW 0                         ; $14e - Checksum (実機は無視するらしい)

; いわゆるmain関数
main:
	ld	sp, $ffff	; スタックポインタをメモリ空間の底に設定
    xor  a          ; a=0
mainloop:
    inc a           ; a++
    ld [$C000],a    ; RAMにコピー
    jr mainloop
